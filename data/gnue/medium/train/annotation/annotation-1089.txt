<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.21Feb2002" enddate="21 Feb 2002 00:00:00 -0800" startdate="21 Feb 2002 00:00:00 -0800" subject="[IRC] 21 Feb 2002" title="GNUe Project Status">
<topic>Common</topic>
<topic>Forms</topic>
<topic>Designer</topic>
<topic>Application Server</topic>
<topic>Navigator</topic>
<topic>Reports</topic>


<p>Jijo Sevilla (TypeRite) said he was interested in GNUe as 
<quote who="Jijo Sevilla">it's written in Python. :)</quote>. James
Thompson (jamest) said <quote who="James Thompson">actually we're writing
in python but will drop back to C where he hit performance problems -  or
in the case of geas....it's all in C at this time</quote>. Jijo thought 
<quote who="Jijo Sevilla">that sounds like a very good way to do things.
Python as the glue, with C handling the performance-intensive portions.
</quote>. He said he was <quote who="Jijo Sevilla">just lurking for awhile, 
if you don't mind. Going through online documents seeing how things are and 
if I can do anything to help. GNUe is the only open source ERP solution I
know of now, and the fact it's written in Python makes me jump up and down
in joy. :)</quote>.</p>

<p>J Beyer (jbeyer) asked <quote who="J Beyer">how much of the gnue code is
actually working? or lets put it this way: is anybody using it in production?
</quote> James said <quote who="James Thompson">as for forms and designer they 
are usable today - they are also used in production</quote>. He confirmed GNUe 
used XML for forms definitions - they were using <quote who="James Thompson">
pyxml - with our own custom wrapper parser</quote>.</p> 

<p>Jijo asked which was the best module to start with <quote who="Jijo Sevilla">
if I want to get a feel of the code</quote>? James said that
<quote who="James Thompson">On the python side of the fence, gnue-common is the
core of forms, designer, navigator, and reports. It provides a lot of the core
functionality of these tools - a dictionary based xml parser that maps to GObj
(our base python object) trees, a data engine that has drivers for every python db
api 2.0 available (we'll also support non-db api 2.0 drivers), a app framework that
embeds a debug system, config system, profiling system,</quote> and so on. 
He explained <quote who="James Thompson">forms is our user interface system - 
designer currenly writes only form xml files - however its capable of handling any
xml format defined in our GParser format</quote>. Reinhard M&#252;ller (reinhard) 
said that <quote who="Reinhard M&#252;ller">geas is in a state where it basically works
(more or less) but the code has become unmaintainable and we are in the process of
rewriting part by part - so if you are a "developer" we would greatly
appreciate help in doing this as it's hard and time consuming work - if you are a
"user" you'd better keep your hands off geas for the time being
:)</quote> James continued <quote who="James Thompson">Navigator is currently a
brain dead navigation system - its a quick hack based upon common that lets you
define processes - these processes define steps that run forms, or apps - some day
this will support role based access control but not today :)  Reports can generate
reports :) - but is not complete - it can be used however -  it's author used it to
generate something like a 10,000 letter mailing to their customer base
IIRC</quote>.</p>

<p>He suggested <quote who="James Thompson">so to play -  i'd grab common, forms,
designer if python was your thing, i'd grab geas if C and object servers are your
thing</quote>.</p>

</section>

