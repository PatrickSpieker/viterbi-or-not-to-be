<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.13Feb2002" enddate="13 Feb 2002 00:00:00 -0800" startdate="13 Feb 2002 00:00:00 -0800" subject="[IRC] 13 Feb 2002" title="Using GObj in GNUe Application Server">

<topic>Application Server</topic>
<topic>Common</topic>


<p>Daniel Baumann (chillywilly) asked 
<quote who="Daniel Baumann">btw, I was looking at some code 
in common and was wondering what GObj is exactly?</quote>.
Jason Cater (jcater) said it was <quote who="Jason Cater">
just a generic object that can be expressed as XML</quote>.
He explained <quote who="Jason Cater">there's a few other 
convenience functions in there</quote> but otherwise it was 
just a container for items like GFForm, GFBlock, GFEntry 
and GFBox.</p>

<p>Daniel asked whether it would <quote who="Daniel Baumann">
be useful if all business objects on the app serverwere GObjs?
</quote>. Jason said he hadn't considered that. Daniel said this 
would mean <quote who="Daniel Baumann">you could transparently 
get persistence of GObjs ;P</quote>. Jason said 
<quote who="Jason Cater">well, the only persistance I see us 
needing is storing the objects in their corresponding XML file
- so the point of GObj is already to provide transparent 
persistence via xml</quote>, but he wasn't sure. Daniel 
clarified <quote who="Daniel Baumann">so, does having GObjs 
witht he ability to output xml help you generate forms? 
Is that how you use it?</quote>. Jason confirmed this. 
Daniel said <quote who="Daniel Baumann">maybe I should 
concentrate on an ODMG python binding to store any type of 
python object [...] anyway, GObj just kinda caught my eye - 
think about it, lemme know if anything smacks you upside 
the head ;)</quote>. Jason <quote who="Jason Cater">
nervously looks for approaching trout</quote>.</p>

</section>

