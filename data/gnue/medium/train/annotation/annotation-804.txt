<section archive="http://mail.gnu.org/pipermail/gnue-dev/2002-March/000063.html" enddate="26 Mar 2002 09:31:44 -0800" posts="4" startdate="25 Mar 2002 22:57:31 -0800" subject="[Gnue-dev] Testing framework?" title="Testing strategy for GNUe">


<p>Harald Meyer asked <quote who="Harald Meyer">
Does GnuEnterprise have an overall testing strategy, which describes
how a new class has to be tested, before it is added to cvs or to a
release?</quote>. Jason Cater said <quote who="Jason Cater">
We do not currently have a formal testing framework for our tools. Well,
for that matter, we don't even have an "informal" testing framework. :)
</quote>. It would be needed eventually, but <quote who="Jason Cater">
I think we are still a bit early in our development cycle to spend 
much time on this.</quote>. Derek Neighbors said <quote who="Derek Neighbors">
Yes I generally before a release run a few 'guantlet' forms I have to test 
functionality.  I would like to see this more robust.</quote> He had 
<quote who="Derek Neighbors">been investigating several Python testing 
suites that are general python.  I will give a formal report on them soon.</quote>
He outlined his preferred testing strategy for the short, mid and long 
term. Jason Cater added <quote who="Jason Cater">Long term, of
course,  we really need a more robust, formal testing system.  
But for the near term, I think our time is better spent on getting good
documentation written and improving the robustness of our existing code.
I think most would agree.</quote></p>

</section>

