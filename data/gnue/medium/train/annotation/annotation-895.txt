<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.2006-05-30" author="Peter Sullivan" contact="mailto:psu@burdonvale.co.uk" enddate="30 May 2006 12:00:00 -0800" startdate="30 May 2006 12:00:00 -0800" subject="[IRC] 30 May 2006" title="Garbage collection in Python">

<topic>Application Server</topic>

<mention>Derek Neighbours</mention>

<p>Further to
<kcref subject="[IRC] 16 May 2006" title="Performance tuning of Application Server" />, 
Reinhard M&#252;ller (reinhard) passed on 
<quote who="Reinhard M&#252;ller">some further info about 
performance issues in appserver and in gnue in general - 
over the weekend I was having a talk with another 
developer that was fighting performance issues in python, and 
this developer had the very same problem that garbage collection 
is *the* performance killer in python and close to impossible to 
optimize as it runs just at random times and it can't be easily 
found out which function causes which garbage</quote>. Derek 
Neighbours (derek) pointed to <quote who="Derek Neighbors">a good 
<a href="http://utcc.utoronto.ca/~cks/space/blog/python/MinimizingObjectChurn">article</a> 
on this subject</quote> that <quote who="Derek Neighbors">gave 
examples on how to avoid object churning</quote>. However, he 
noted that <quote who="Derek Neighbors">when we chose python 
the primary reason was - python values productivity over 
performance :) - is gnue to a point where it needs to consider 
optimization?</quote>. Jason Cater (jcater) did not think so - 
<quote who="Jason Cater">I think the question just came up in 
the context of some tests someone was doing with a new comm 
backend</quote>.</p>

</section>

