<section archive="http://mail.gnu.org/pipermail/gnue/2002-August/003159.html" enddate="21 Aug 2002 09:24:40 -0800" posts="17" startdate="15 Aug 2002 13:22:31 -0800" subject="Supply Chain Spec Volunteer" title="Specification for Supply Chain Management (SCM)">

<topic>Supply Chain</topic>
<topic>Base Package</topic>

<p>Jeff Childers volunteered <quote who="Jeff Childers">to start 
fleshing out the SupplyChain.pdf document</quote>. He had 
<quote who="Jeff Childers">lots of detailed ERP product experience 
(from coding to implementation) and tons of opinions :).</quote>
Neil Tiffin said he had <quote who="Neil Tiffin">been in charge, 
but am currently under water with my job</quote> so 
<quote who="Neil Tiffin">If you want to start a dialog I would be 
more than happy to help.</quote> Ross Sponholtz volunteered to 
<quote who="Ross Sponholtz">help out</quote> as well.</p>

<p>Derek Neighbors said <quote who="Derek Neighbors">Yes we woudl 
love it, the source of that pdf is in cvs and is actually
in docbook (xml).</quote> Jeff suggested 
<quote who="Jeff Childers">Unless anyone has an objection, I think 
I would like to use a light UML style to organize the requirements. 
That is, define the modules in terms of objects ('actors' or 
whatever) with their properties, events and methods.</quote>
Neil said he was not opposed to UML, but <quote who="Neil Tiffin">I 
do believe that we will need a business persons view (prose 
functionality) of the system design</quote> as well.
Derek agreed - <quote who="Derek Neighbors">I would like to 
see proposals in a narrative form and following the
module guide template (it is of course open to enhancements).  I have no
problem including UML along with that, but not as a substitute to it. 
This is pretty much because not everyone knows UML or has tools to deal
with it, plus forcing to discuss in narrative clarifies alot.</quote>
Jeff agreed, and asked where to find the module guide template.
He asked <quote who="Jeff Childers">What application do you guys use to 
read/edit the XML DocBook files?</quote> He had tried googling, but this 
just found the DocBook specifications, not tools to open it.</p>

<p>Earlier, Neil said that <quote who="Neil Tiffin">The main stuff 
that should be kept or should be built on is in the Base Package.</quote> 
Previously, the documentation had been <quote who="Neil Tiffin">built directly 
from the object definition and it was not possible for the system 
design, documentation, and objects to be different.</quote>
However, nobody else seemed to think this was 
<quote who="Neil Tiffin">a big deal and so no need to keep at this 
point.</quote> However, he warned <quote who="Neil Tiffin">that 
the work load will only get more onerous as the system grows and 
some organization and automation now, while not entirely necessary, 
will pay hugely in the near future.</quote></p>

<p>Todd Boyle felt that <quote who="Todd Boyle">the "UN/CEFACT 
Modeling Methodology" 
<a href="http://www.collaborativedomain.com/standards/index.htm">(UMM)</a></quote>, 
might form a good structure for writing GNUe package proposals.
<quote who="Todd Boyle">It is "stackism"</quote>, with 
<quote who="Todd Boyle">a business process layer</quote>, 
<quote who="Todd Boyle">a collaboration layer</quote> and 
<quote who="Todd Boyle">a transaction layer of course.</quote>.
These abstract models were now being turned into 
<quote who="Todd Boyle">the state machine that defines a 
BSI, a business service interface</quote> to keep 
the home systems of both/all parties to an interfaced 
transaction in sync - <quote who="Todd Boyle">That
is the whole entier point of business process software,
that some unambiguous business entity agreed in a
contract, has proceeded from one state, to the next
state or to an exception condition. etc.</quote> Using 
UMM, whilst a bit prescriptive, would involve GNUe 
<quote who="Todd Boyle">in the
middle of a larger community, one that is very clueful and
has huge history and experience, and is throwing off not
only a lot of modeling but pretty specific code objects now,
and...  you don't have to write documentation :-)</quote>.</p>

<p>Elsewhere, Alejandro Imass said he was 
<quote who="Alejandro Imass">still around if you need
any help with the original Supply Chain Specs that I
originally wrote and submitted to GNUE a long time
ago.</quote> He personally used
<quote who="Alejandro Imass">emacs + psgml major mode</quote> 
to write DocBook - <quote who="Alejandro Imass">It is by far 
THE BEST SGML TOOL IN THE WORLD!</quote>. Neil explained 
to Jeff that <quote who="Neil Tiffin">Alejandro was one of the 
original contributors to the specs and while we did not get far 
enough to include all of this product structures he had some 
very good ideas that were captured in early emails.</quote> 
He hoped <quote who="Neil Tiffin">Hopefully with the next version 
we can actually build a system.</quote> Jeff replied to 
Alejandro <quote who="Jeff Childers">If emacs'll run on my Windows 
XP box then by george I'll try it.</quote> On Supply Chain, 
<quote who="Jeff Childers">If you have any notes or ideas that are 
still hanging around, even if they aren't pretty or finished, send 
them along and I'll review them for the next iteration. Let's 
knock the narrative out and then we'll take up the flag again for 
a beautiful UML model :)</quote>. Alejandro said that 
<quote who="Alejandro Imass">All sgml tools work like a breeze in
Debian</quote> but <quote who="Alejandro Imass">In Windoze I would 
bet it is much harder to get free ``libre'' (GPL) sgml tools up and
running, but I am sure someone out there has tried and
can help you.</quote> He felt that using a word-processor tool like 
OpenOffice was not really ideal for <quote who="Alejandro Imass">really 
large documentation projects</quote> like GNUe.</p>

</section>


