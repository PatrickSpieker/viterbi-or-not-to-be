<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.08Jul2002" enddate="07 Jul 2002 23:00:00 -0800" startdate="07 Jul 2002 23:00:00 -0800" subject="[IRC] 08 Jul 2002" title="Using primary keys rather than row numbers to update tables">

<topic>Common</topic>

<p>John Lenton (Chipaca) said that the papo project team were trying 
<quote who="John Lenton">to get the dbsig drivers to work wrt primary 
keys</quote>, as previoulsy discussed in 
<kcref subject="[IRC] 10 Jun 2002" title="Problems with floating point fields in PostgreSQL" />, 
and <quote who="John Lenton">we've stumbled over something that'll break 
backwards compatibility if we fix it - and it's a pain if we don't (because 
we'll have to check the type of the return value of a function, to start 
with)</quote>. Derek Neighbors (dneighbo) said 
<quote who="Derek Neighbors">thats ok we have a rule here anyhow it says
"You cant fix something unless you break two of something else."</quote>
John said <quote who="John Lenton">actually, it wouldn't break anything, 
except backwards compatibility between dbdrivers - i.e. all the dbdrivers 
except postgres would stop working - which is fine by me!</quote>.</p>

<p>Jason Cater (jcater) asked <quote who="Jason Cater">so what is the 
fix/breakage?</quote> John said <quote who="John Lenton">in dbsig, you 
see if the dbdriver has a string called primary key, and you use that as 
the name of the column that has the primary key - that breaks on one table 
when you have multiple primary keys</quote>. Jason said that the 
PrimaryIdField was not necessarily the primary key, just a way of 
identifying a particular row in a table to update. John agreed - 
<quote who="John Lenton">it could be for example in postgres the 
oid</quote>. However, <quote who="John Lenton">the trouble we ran into 
was when inserting a row that has an autogenerated primary key - we 
couldn't find out the oid of the row</quote>. Jason said he wanted 
<quote who="Jason Cater">to petition the DB-SIG group to add that 
functionality i.e., we can get the OID (or RowID, etc) of any inserted 
rows - but that doesn't solve the immediate need</quote>. He had 
recently <quote who="Jason Cater">added primary key lookup functions 
to the postgresql drivers</quote> in the meantime.</p>

<p>John agreed, but noted that the temporary solution using primary 
keys would mean <quote who="John Lenton">that the thing we've got to 
return from PrimaryIdField is no longer a string, but rather a 
hash</quote>. This was because <quote who="John Lenton">because, if 
you remember, we're working on getting multiple tables working...
...so we have several primary keys in several tables - if not, we'd've 
done "a, b, c".split(", ") and retained backwards compat</quote>. 
Jason agreed - <quote who="Jason Cater">I see where you guys are 
going</quote>, adding <quote who="Jason Cater">just create a trouble 
ticket saying the other ones might be broken</quote>. He said 
<quote who="Jason Cater">/me thinks the only other driver to use 
PrimaryIdField is Oracle - and I'll fix it quickly if it breaks
as I use it</quote>.</p>

</section>


