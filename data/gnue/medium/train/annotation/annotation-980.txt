<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.18Jan2002" enddate="18 Jan 2002 00:00:00 -0800" startdate="18 Jan 2002 00:00:00 -0800" subject="[IRC] 18 Jan 2002" title="Degenerate Widgets">
<topic>Forms</topic>


<p>James Thompson noted that he <quote who="James Thompson">was 
thinking about keeping the number of entities to a minimum</quote>
in the GNUe Definition files. Michael Maluck (madlocke) asked 
<quote who="Michael Maluck">what to do with special styles</quote>
for layout managers, such as box layouts that 
<quote who="Michael Maluck">can do layouting horizontal or vertical
</quote>. James said <quote who="James Thompson">we could either allow 
optional attributes or we could provide some general attribute that 
takes a string of values</quote>. Jason Cater (jcater) opined that 
<quote who="Jason Cater">it critical that we keep the number of tags 
to a minimum</quote>. James explained that <quote who="James Thompson">
my goal however was for forms to be able to fall back when it hits 
something it didn't know how to handle - for instance when curses and 
wxpython both worked, the curses client didn't know how to do 
dropdowns. Since dropdown was an entry style it didn't matter - the 
forms with dropdown still worked on curses and still did input 
validation - you just couldn't pick from a list. If we had done 
&lt;dropdown&gt; as it's own thing then the form would not have 
displayed at all</quote>. Michael said <quote who="Michael Maluck">
i was thinking of something like a widget hierarchy - means that these 
fall backs can be automated</quote>. He explained 
<quote who="Michael Maluck">if the ui does not explicitly say: i can 
support a tag that tag falls back until a good widget class is found
</quote>. James said this was basically what they were trying to do - 
<quote who="James Thompson">I'm still of a mind set to keep the number 
of tags low</quote> to make this easier to program.</p>

<p>Derek Neighbors (dneighbo) said <quote who="Derek Neighbors">
the more complex the widget set teh harder to support a myriad of UI's
- but more importantly - the most PRODUCTIVE applications i have seen 
for (business) are old curses terminals [...] a little hard to 'learn' 
but once you learn VERY efficient to use</quote>. There were still a 
lot of dumb terminal applications still in use in large organisations. 
He added <quote who="Derek Neighbors">i am NOT ANTI gui - just saying 
all the bells and whistles of complex widget sets dont == better 
software</quote>. James said <quote who="James Thompson">what I like 
now is that I can show a .gfd to a non-programmer and they can 
"get" it</quote>. Derek agreed - 
<quote who="Derek Neighbors">you shouldnt have to be a C hacker to use 
gnue and extend applications</quote>.</p>

<p>Michael asked what had been decided about 
<quote who="Michael Maluck">trees and other widgets</quote>, as 
discussed in
<kcref startdate="18 Dec 2001 00:00:00 -0800" title="Trees and Lists in GNUe Forms" />.
Jason said <quote who="Jason Cater">I think the consensus was those 
would be custom widgets that we would not support - but would provide 
hooks for those who "insisted" they need them</quote>. 
Derek added <quote who="Derek Neighbors">but we make it a 'use at own 
risk' and we dont use it for GNUe Apps that are official</quote>
Michael said <quote who="Michael Maluck">ok. then we need some docs/
specs about this</quote> and asked whether <quote who="Michael Maluck">
the widgets supported at the moment by gnuef define the standard 
already or is it too much/less?</quote>. Derek said 
<quote who="Derek Neighbors">the current thinking is start simple - 
lets get entry/label/etc working WELL - and supported on many 
different UI's - and used in applications - then lets see what other 
widgets could be really beneficial and such and look at implementing 
them i.e. classic lets do a few things really well instead of a lots 
of things really bad</quote>.</p>

</section>

