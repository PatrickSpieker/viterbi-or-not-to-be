<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.12Apr2002" enddate="13 Apr 2002 23:00:00 -0800" startdate="11 Apr 2002 23:00:00 -0800" subject="[IRC] 12 Apr 2002" title="Python ODMG bindings for GNUe Application Server">
<topic>Application Server</topic>
<topic>Common</topic>

<p>Daniel Baumann (chillywilly) said he was 
<quote who="Daniel Baumann">working on python ODMG binding</quote> 
as <quote who="Daniel Baumann">you can implement the collection 
classes in python</quote>. This was documented in 
<a href="http://subversions.gnu.org/cgi-bin/cvsweb/gnue/geas/doc/odmg.txt">odmg.txt</a>. 
He noted that <quote who="Daniel Baumann">some of them should contain 
lists as a member - some contain a dictionary - andn we should implement 
the methods for emulating those types</quote>. Methods would also be 
needed for operations such as add and compare. He said 
<quote who="Daniel Baumann">I am hoping to get the the point of 
difining the odmg collections classes in python</quote> but 
<quote who="Daniel Baumann">I don;t think they'll get done 
immediately</quote>.</p>

<p><a href="http://www.gnuenterprise.org/irc-logs/gnue-public.log.13Apr2002">
The next day</a>, Daniel felt <quote who="Daniel Baumann">that the OMG 
wants to do the same as what we are trying to do with gnurpc - 
er, well at least have ti be an extensible framework</quote>, citing 
some quotes. He noted <quote who="Daniel Baumann">instead of CORBA 
they are going UML to code now - it's wacky shit - they are adding 
stuff to UML to help make code generation easier - this is cool as 
I always thought the one stop CORBA solution was short 
sighted</quote>.</p>

<p><a href="http://www.gnuenterprise.org/irc-logs/gnue-public.log.14Apr2002">
Another day on</a>, Daniel hyperlinked to 
<a href="http://www.omg.org/mda/">an OMDG document</a> outlining 
<quote who="Daniel Baumann">a way to be middleware agnostic - and 
use thier existing framework(s) - I think they have seen the error 
of their ways of making CORBA the one stop middleware solution in 
their standards and went to using UML so as to support multiple 
middlewares - I wonder how far along they are in converting all 
those IDLs of their 'services' and other standards into this UML 
modeling thing</quote>? He also liked 
<a href="http://www.omg.org/attachments/cutter/deau0201.html">another</a>
article as well.</p>

</section>

