<section archive="http://www.gnuenterprise.org/irc-logs/gnue-public.log.17Apr2002" enddate="16 Apr 2002 23:00:00 -0800" startdate="16 Apr 2002 23:00:00 -0800" subject="[IRC] 17 Apr 2002" title="Object modelling in GNUe Application Server">
<topic>Application Server</topic>

<p>Daniel Baumann (chillywilly) asked 
<quote who="Daniel Baumann">anyone use ERDs?</quote> 
(Entity Relationship Diagrams). He asked 
<quote who="Daniel Baumann">why does ERD remind me of UML 
and relationships?</quote> Andrew Mitchell (ajmitch) suggested 
<quote who="Andrew Mitchell">because it maps directly to 
it?</quote>. He hoped that eventually GNUe Designer would 
allow you to <quote who="Andrew Mitchell">basically 
design ERDs, select the database to dump the stuff into, then 
generate tables, and make forms and reports</quote>.
Daniel wondered <quote who="Daniel Baumann">why would you 
want to use ERD instead of UML?</quote> Andrew said
<quote who="Andrew Mitchell">ERD is a special type of UML 
modelling, i think</quote>. Daniel dug up a quote that 
implied that Entity-Relationship and the Object Model were 
different approaches - <quote who="Daniel Baumann">ERD for 
2-tier people - and UML or something for objects that execute 
on the app server</quote>. Andrew thought that this 
<quote who="Andrew Mitchell">means that it has to produce 
GCDs, and put them in the object repository</quote>. Daniel 
wasn't sure.</p>

<p>Later, Daniel wondered <quote who="Daniel Baumann">if these 
2-tier guys even use ERDs - then probably just start making 
tables - no one bothers with design these days</quote>. 
Andrew asked whether <quote who="Andrew Mitchell">you think there 
should be a standalone app that makes ERDs &amp; then splats out 
crap via the schema api? or extend designer?</quote>. Daniel 
felt <quote who="Daniel Baumann">ERD isn't really for objects, 
imho</quote> unless and until they actually got implemented as SQL. 
However, <quote who="Daniel Baumann">sam thing could be said for 
ODMG's model  - they do data schema with ODL and functional with OQL
- but you can call methods</quote>. Andrew asked 
<quote who="Andrew Mitchell">how we gonna do methods?</quote>. Daniel 
suggested <quote who="Daniel Baumann">very carefully ;)</quote> He 
suggested <quote who="Daniel Baumann">they would make a request - the 
methods server would look for the method - and load whatever it found 
at run-time - and execute it</quote>. Andrew suggested that 
<quote who="Daniel Baumann">we should use some of the DotGNU stuff 
here :)</quote>.</p>

</section>

